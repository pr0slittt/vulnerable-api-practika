name: DevSecOps Pipeline

on:
  push:
    branches:
      - main
      - master # Добавьте, если используете ветку master
  pull_request:
    branches:
      - main
      - master # Добавьте, если используете ветку master

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # Убедитесь, что это правильная версия Python для вашего проекта

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt # Убедитесь, что requirements.txt находится в папке 'app'

      - name: Download Grype
        # Скачиваем исполняемый файл Grype напрямую, чтобы иметь над ним полный контроль
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sudo bash -s -- -b /usr/local/bin
          grype version

      - name: Run Grype SCA Scan and Save SARIF
        # Запускаем Grype как команду и перенаправляем вывод в файл grype-results.sarif
        # Используем '|| true', чтобы шаг не падал, если Grype найдет уязвимости и выдаст ненулевой код выхода
        run: |
          grype dir:./app -o sarif > grype-results.sarif || true

      - name: Upload SARIF results to GitHub Security tab
        # Этот шаг должен найти grype-results.sarif, так как мы его явно создали
        if: always() # Запускаем всегда, даже если предыдущие шаги упали, чтобы попытаться загрузить отчет
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: grype-results.sarif
          wait-for-processing: true
