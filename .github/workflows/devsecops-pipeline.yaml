name: DevSecOps Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_tag.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Docker image tag
        id: set_tag
        run: echo "image_tag=vulnerable-api:latest" >> "$GITHUB_OUTPUT"

  sast-semgrep:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install "semgrep>=1.76.0"
          semgrep --version
      - run: |
          semgrep --config p/python --config p/security-audit \
            --sarif -o semgrep-results.sarif ./app || true
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-results.sarif
      - uses: actions/upload-artifact@v4
        with:
          name: semgrep-sarif-report
          path: semgrep-results.sarif

  sca-grype:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sudo bash -s -- -b /usr/local/bin
      - name: Run Grype scan
        run: |
          grype dir:./app -o sarif --file grype-results.sarif || true
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: grype-results.sarif
      - uses: actions/upload-artifact@v4
        with:
          name: grype-sarif-report
          path: grype-results.sarif

  container-build-and-trivy:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - run: docker build -t vulnerable-api:latest .
      - uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'vulnerable-api:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true
        continue-on-error: true
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
      - uses: actions/upload-artifact@v4
        with:
          name: trivy-sarif-report
          path: trivy-results.sarif

  dast-zap:
    needs: container-build-and-trivy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run container
        run: |
          docker network create zap-net || true
          docker run -d --rm --network zap-net --name vulnerable-api \
            -p 8081:8081 \
            ghcr.io/pr0slittt/vulnerable-api-practika:latest
      - name: Wait for API
        run: |
          for i in {1..15}; do curl -s http://localhost:8081 && break || sleep 2; done
      - name: ZAP scan
        run: |
          docker pull ghcr.io/zaproxy/zaproxy:stable
          docker run --rm --network zap-net \
            -v "${{ github.workspace }}":/zap/wrk:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t http://vulnerable-api:8081 -I \
            -r zap-report.html -J zap-report.json -x zap-report.xml
      - uses: actions/upload-artifact@v4
        with:
          name: zap-reports
          path: |
            zap-report.html
            zap-report.json
            zap-report.xml
