name: DevSecOps Pipeline

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      packages: write # Добавлено для работы с Docker и Trivy

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Cache Grype DB
        uses: actions/cache@v3
        with:
          path: ~/.grype/db
          key: ${{ runner.os }}-grype-db-${{ hashFiles('grype-db-version.txt') }}
          restore-keys: |
            ${{ runner.os }}-grype-db-
      - name: Create Grype DB Version File
        run: echo "1" > grype-db-version.txt

      - name: Download Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sudo bash -s -- -b /usr/local/bin
          grype version

      - name: Run Grype SCA Scan and Save SARIF
        run: |
          grype dir:./app -o sarif --file "${{ github.workspace }}/grype-results.sarif" || true

      - name: Upload SARIF results to GitHub Security tab (Grype)
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'grype-results.sarif'
          wait-for-processing: true

      - name: Install Semgrep CLI
        run: |
          pip install "semgrep>=1.76.0"
          semgrep --version

      - name: Run Semgrep SAST Scan
        run: |
          set -euxo pipefail # Добавлено для более строгой отладки
          semgrep --config "p/python" --config "p/security-audit" \
            --sarif -o "${{ github.workspace }}/semgrep-results.sarif" ./app || true # <-- ИЗМЕНЕНО: Вернул --sarif
          
      - name: List files after Semgrep scan
        run: |
          echo "Listing files in ${{ github.workspace }}:"
          ls -l ${{ github.workspace }}
          if [ -f "${{ github.workspace }}/semgrep-results.sarif" ]; then
            echo "First 100 lines of semgrep-results.sarif:"
            head -n 100 "${{ github.workspace }}/semgrep-results.sarif"
          else
            echo "semgrep-results.sarif was NOT found."
          fi

      - name: Upload Semgrep SARIF results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'semgrep-results.sarif'
          wait-for-processing: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          docker build -t vulnerable-api:latest .

      - name: Run Trivy Container Scan
        # Удален 'run: |' и 'set -euxo pipefail' из этого блока,
        # так как 'uses' должен быть на том же уровне, что и 'name'.
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'vulnerable-api:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true
        continue-on-error: true # Сохранено, чтобы пайплайн не падал, если Trivy найдет уязвимости

      - name: List files after Trivy scan
        run: |
          echo "Listing files in ${{ github.workspace }}:"
          ls -l ${{ github.workspace }}
          if [ -f "${{ github.workspace }}/trivy-results.sarif" ]; then
            echo "First 100 lines of trivy-results.sarif:"
            head -n 100 "${{ github.workspace }}/trivy-results.sarif"
          else
            echo "trivy-results.sarif was NOT found."
          fi

      - name: Upload Trivy SARIF results to GitHub Security
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
          wait-for-processing: true 
