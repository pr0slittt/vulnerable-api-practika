name: DevSecOps Пайплайн

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  contents: read
  security-events: write # Требуется для Code Scanning

jobs:
  # Задание для сборки Docker-образа и передачи тега Trivy
  build-docker-image:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-tag.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Сборка Docker-образа
        id: set-tag
        run: |
          docker build -t vulnerable-api:latest .
          echo "IMAGE_TAG=vulnerable-api:latest" >> $GITHUB_ENV
          echo "image_tag=vulnerable-api:latest" >> $GITHUB_OUTPUT # Установка вывода для других заданий

  # Вызов отдельных переиспользуемых рабочих процессов
  semgrep-scan-job:
    needs: build-docker-image # Гарантируем, что сборка завершится, если это необходимо для последующих шагов, хотя и не напрямую для semgrep
    uses: ./.github/workflows/reusable/semgrep_scan.yaml # Путь к переиспользуемому рабочему процессу
    with:
      repository: ${{ github.repository }}
      sha: ${{ github.sha }}
      ref: ${{ github.ref }}
      run_id: ${{ github.run_id }}
    secrets:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  grype-scan-job:
    needs: build-docker-image
    uses: ./.github/workflows/reusable/grype_scan.yaml
    with:
      repository: ${{ github.repository }}
      sha: ${{ github.sha }}
      ref: ${{ github.ref }}
      run_id: ${{ github.run_id }}
    secrets:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  checkov-scan-job:
    needs: build-docker-image
    uses: ./.github/workflows/reusable/checkov_scan.yaml
    with:
      repository: ${{ github.repository }}
      sha: ${{ github.sha }}
      ref: ${{ github.ref }}
      run_id: ${{ github.run_id }}
    secrets:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trivy-scan-job:
    needs: build-docker-image # Trivy нужен собранный образ
    uses: ./.github/workflows/reusable/trivy_scan.yaml
    with:
      repository: ${{ github.repository }}
      sha: ${{ github.sha }}
      ref: ${{ github.ref }}
      run_id: ${{ github.run_id }}
      image_tag: ${{ needs.build-docker-image.outputs.image_tag }} # Передаем тег собранного образа
    secrets:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  zap-scan-job:
    needs: build-docker-image # ZAP нужно запущенное приложение
    uses: ./.github/workflows/reusable/zap_scan.yaml
    with:
      repository: ${{ github.repository }}
      sha: ${{ github.sha }}
      ref: ${{ github.ref }}
      run_id: ${{ github.run_id }}
    secrets:
      GHCR_PAT: ${{ secrets.GHCR_PAT }}
