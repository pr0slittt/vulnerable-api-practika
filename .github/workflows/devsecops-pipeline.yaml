name: DevSecOps Pipeline

on:
  push:
    branches:
      - main

jobs:
  semgrep_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Run Semgrep Scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: |
            p/python
            p/security-audit
            ./semgrep-rules
        continue-on-error: true

      - name: Upload Semgrep SARIF report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: semgrep-results.sarif

  trivy_scan:
    runs-on: ubuntu-latest
    needs: semgrep_scan
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Build vulnerable-api Docker image
        run: docker build -t vulnerable-api:latest .

      - name: Run Trivy Container Scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: vulnerable-api:latest
          format: sarif
          output: trivy-results.sarif
          severity: HIGH,CRITICAL
          ignore-unfixed: true
        continue-on-error: true

      - name: Upload Trivy SARIF report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-results.sarif

  grype_scan:
    runs-on: ubuntu-latest
    needs: trivy_scan
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Build vulnerable-api Docker image
        run: docker build -t vulnerable-api:latest .

      - name: Run Grype scan
        uses: anchore/scan-action@v3
        with:
          image: vulnerable-api:latest
          output-format: sarif
        continue-on-error: true

      - name: Upload Grype SARIF report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: grype-report
          path: grype.sarif

  zap_scan:
    runs-on: ubuntu-latest
    needs: grype_scan
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create Docker network
        run: docker network create zap-net || true

      - name: Run vulnerable-api container
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/pr0slittt/vulnerable-api-practika:latest
          options: --rm --network zap-net -d -p 8081:8081 --name vulnerable-api

      - name: Wait for vulnerable-api to be ready
        uses: andstor/wait-for-http-action@v1
        with:
          url: http://localhost:8081
          timeout: 60

      - name: Run OWASP ZAP baseline scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          target: 'http://vulnerable-api:8081'
          cmd_options: '-I --auto'
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          fail_action: false
          allow_issue_writing: false
          artifact_name: 'zap_scan'

      - name: Upload ZAP report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: report_html.html
