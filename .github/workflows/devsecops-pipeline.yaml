name: DevSecOps Pipeline

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          set -euxo pipefail # Останавливать выполнение при ошибке
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "Installation complete. PWD: $(pwd)" # Выводим текущую директорию
          ls -l

      - name: Run Semgrep SAST Scan
        id: semgrep_scan
        run: |
          set -euxo pipefail # Останавливать выполнение при ошибке
          echo "Starting Semgrep scan. PWD: $(pwd)"
          # Semgrep Action itself handles the output path internally when 'output' is provided in 'with:'
          # We are running the CLI directly here, so ensure the action is available.
          # The returntocorp/semgrep-action@v1 is designed to be used with 'uses', not directly in 'run'.
          # If it were to be run from CLI, it would be 'semgrep --config ... --output ...'
          # Let's revert this back to 'uses:' to properly leverage the action.
          # The previous attempt to run it directly might be part of the problem for Semgrep.

          # Reverting to the correct way of using semgrep-action
          # This step will be empty and Semgrep will be called as a 'uses:' action below.
          echo "Semgrep scan will be executed by a 'uses:' action."

      - name: Execute Semgrep SAST Scan (as 'uses:' action)
        # This step will actually run the semgrep-action
        uses: returntocorp/semgrep-action@v1
        with:
          config: |
            p/python
            p/python-web
            p/security-audit
          target: './app'
          output: '${{ github.workspace }}/semgrep-results.sarif'
          output-format: sarif

      - name: List files after Semgrep scan
        run: |
          echo "Listing files in ${{ github.workspace }}:"
          ls -l ${{ github.workspace }}
          echo "Listing files recursively in ${{ github.workspace }}:"
          ls -lR ${{ github.workspace }}
          if [ -f "${{ github.workspace }}/semgrep-results.sarif" ]; then
            echo "semgrep-results.sarif content (first 100 lines):"
            head -n 100 "${{ github.workspace }}/semgrep-results.sarif"
          else
            echo "semgrep-results.sarif not found after scan."
          fi

      - name: Upload Semgrep SARIF results to GitHub Security
        if: success() || failure() # Всегда пытаться загрузить
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'semgrep-results.sarif'
          wait-for-processing: true

      - name: Download Grype
        run: |
          set -euxo pipefail
          echo "Starting Grype download. PWD: $(pwd)"
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sudo bash -s -- -b /usr/local/bin
          grype version
          echo "Grype download finished. PWD: $(pwd)"

      - name: Run Grype SCA Scan and Save SARIF
        id: grype_scan
        run: |
          set -euxo pipefail
          echo "Starting Grype scan. PWD: $(pwd)"
          # ИСПРАВЛЕНИЕ: Используем опцию --file для Grype, чтобы явно указать выходной файл
          grype dir:./app -o sarif --file "${{ github.workspace }}/grype-results.sarif" || true
          echo "Grype command exit code: $?"
          echo "Grype scan finished. PWD: $(pwd)"

      - name: List files after Grype scan
        run: |
          echo "Listing files in ${{ github.workspace }}:"
          ls -l ${{ github.workspace }}
          echo "Listing files recursively in ${{ github.workspace }}:"
          ls -lR ${{ github.workspace }}
          if [ -f "${{ github.workspace }}/grype-results.sarif" ]; then
            echo "grype-results.sarif content (first 100 lines):"
            head -n 100 "${{ github.workspace }}/grype-results.sarif"
          else
            echo "grype-results.sarif not found after scan."
          fi

      - name: Upload SARIF results to GitHub Security tab (Grype)
        if: success() || failure() # Всегда пытаться загрузить
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'grype-results.sarif'
          wait-for-processing: true
