# semgrep-rules/token-expiration-check.yaml
rules:
  - id: token-expiration-check-missing
    message: |
      Токены аутентификации используются без адекватной проверки срока их действия во всех точках использования.
      Это позволяет злоумышленникам использовать просроченные токены для доступа к ресурсам.
    severity: WARNING
    languages:
      - python
    patterns:
      - pattern-either: # Группируем контексты, где используется токен
          # --- Контекст 1: GET /user/<user_id> ---
          # Ищем функцию, связанную с маршрутом GET /user/<user_id>
          - pattern-inside: |
              @route("/user/<user_id>", method="GET")
              def $FUNC_GET(user_id):
                ...
                $TOKEN_RECORD = $DB_CURSOR.fetchone() # Захватываем запись токена
                # Проверяем, что есть условие, использующее токен
                if isinstance($TOKEN_RECORD, tuple) and ($TOKEN_RECORD[$TOKEN_FIELD_INDEX_1] == $AUTH_TOKEN_1 or $TOKEN_RECORD[$TOKEN_FIELD_INDEX_2] == $AUTH_TOKEN_2):
                  ...
          # Убеждаемся, что внутри этого контекста ОТСУТСТВУЕТ явная проверка срока действия токена
          - pattern-not: |
              ($EXPR_1 < $TIME_VAR or $EXPR_2 > $TIME_VAR) # Пример проверки: токен просрочен или еще действителен
          - pattern-not: |
              ($TIME_VAR - $EXPR_3) < $THRESHOLD # Пример проверки: разница во времени меньше порога
          - pattern-not: |
              time.time() $OP $TOKEN_RECORD[$EXP_FIELD_INDEX] # Прямое сравнение time.time() с полем истечения токена

          # --- Контекст 2: POST /user (создание пользователя) ---
          - pattern-inside: |
              @route("/user", method="POST")
              def $FUNC_CREATE():
                ...
                $TOKEN_RECORD = $DB_CURSOR.fetchone() # Захватываем запись токена
                if isinstance($TOKEN_RECORD, tuple) and ($TOKEN_RECORD[$TOKEN_FIELD_INDEX_1] == $AUTH_TOKEN_1 or $TOKEN_RECORD[$TOKEN_FIELD_INDEX_2] == $AUTH_TOKEN_2):
                  ...
          - pattern-not: |
              ($EXPR_1 < $TIME_VAR or $EXPR_2 > $TIME_VAR)
          - pattern-not: |
              ($TIME_VAR - $EXPR_3) < $THRESHOLD
          - pattern-not: |
              time.time() $OP $TOKEN_RECORD[$EXP_FIELD_INDEX]

          # --- Контекст 3: DELETE /user/<user_id> ---
          - pattern-inside: |
              @route("/user/<user_id>", method="DELETE")
              def $FUNC_DELETE(user_id):
                ...
                $TOKEN_RECORD = $DB_CURSOR.fetchone() # Захватываем запись токена
                if isinstance($TOKEN_RECORD, tuple) and ($TOKEN_RECORD[$TOKEN_FIELD_INDEX_1] == $AUTH_TOKEN_1 or $TOKEN_RECORD[$TOKEN_FIELD_INDEX_2] == $AUTH_TOKEN_2):
                  ...
          - pattern-not: |
              ($EXPR_1 < $TIME_VAR or $EXPR_2 > $TIME_VAR)
          - pattern-not: |
              ($TIME_VAR - $EXPR_3) < $THRESHOLD
          - pattern-not: |
              time.time() $OP $TOKEN_RECORD[$EXP_FIELD_INDEX]
    paths:
      include:
        - vAPI.py
